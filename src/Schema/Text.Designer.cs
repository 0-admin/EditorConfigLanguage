//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EditorConfig.Schema {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Text {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Text() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("EditorConfig.Schema.Text", typeof(Text).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File character encoding.
        /// </summary>
        internal static string KeywordCharset {
            get {
                return ResourceManager.GetString("KeywordCharset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Line ending file format (Unix, DOS, Mac).
        /// </summary>
        internal static string KeywordEndOfLine {
            get {
                return ResourceManager.GetString("KeywordEndOfLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A whole number defining the number of columns used for each indentation level and the width of soft tabs (when supported). When set to tab, the value of tab_width (if specified) will be used.
        /// </summary>
        internal static string KeywordIndentSize {
            get {
                return ResourceManager.GetString("KeywordIndentSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indentation Style.
        /// </summary>
        internal static string KeywordIndentStyle {
            get {
                return ResourceManager.GetString("KeywordIndentStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Denotes whether file should end with a newline.
        /// </summary>
        internal static string KeywordInsertFinalNewline {
            get {
                return ResourceManager.GetString("KeywordInsertFinalNewline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Forces hard line wrapping after the amount of characters specified.
        /// </summary>
        internal static string KeywordMaxLineLength {
            get {
                return ResourceManager.GetString("KeywordMaxLineLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Special property that should be specified at the top of the file outside of any sections. Set to “true” to stop .editorconfig files search on current file..
        /// </summary>
        internal static string KeywordRoot {
            get {
                return ResourceManager.GetString("KeywordRoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A whole number defining the number of columns used to represent a tab character. This defaults to the value of indent_size and doesn&apos;t usually need to be specified..
        /// </summary>
        internal static string KeywordTabWidth {
            get {
                return ResourceManager.GetString("KeywordTabWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Denotes whether whitespace is allowed at the end of lines.
        /// </summary>
        internal static string KeywordTrimTrailingWhitespace {
            get {
                return ResourceManager.GetString("KeywordTrimTrailingWhitespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When this style is not being followed, show a compiler error (red squiggle)..
        /// </summary>
        internal static string SeverityError {
            get {
                return ResourceManager.GetString("SeverityError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not show anything to the user when this style is not being followed, however code generation features will generate in this style..
        /// </summary>
        internal static string SeverityNone {
            get {
                return ResourceManager.GetString("SeverityNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When this style is not being followed, show it to the user as a suggestion (underlying dots on the first two characters)..
        /// </summary>
        internal static string SeveritySuggestion {
            get {
                return ResourceManager.GetString("SeveritySuggestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When this style is not being followed, show a compiler warning (green squiggle)..
        /// </summary>
        internal static string SeverityWarning {
            get {
                return ResourceManager.GetString("SeverityWarning", resourceCulture);
            }
        }
    }
}
